// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  USER
  ADMIN
}

enum Status {
  OPEN
  IN_PROGRESS
  CLOSED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Category {
  BUG
  FEAT
  OTHER
}

model User {
  id        String         @id @default(uuid())
  firstName String
  lastName  String
  email     String         @unique
  password  String
  role      Role           @default(USER)
  ticket    Ticket[]
  assignee  Ticket[]       @relation("assigne")
  comment   Comment[]
  notif     Notification[]
}

model Ticket {
  id           String         @id @default(uuid())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  title        String
  description  String
  category     Category       @default(BUG)
  status       Status         @default(OPEN)
  priority     Priority       @default(LOW)
  assigneeId   String?
  assignee     User?          @relation("assigne", fields: [assigneeId], references: [id])
  userId       String
  user         User           @relation(fields: [userId], references: [id])
  attachments  String?
  comment      Comment[]
  notification Notification[]
}

model Comment {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  content     String
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  ticketId    String
  ticket      Ticket   @relation(fields: [ticketId], references: [id])
  attachments String?
}

model Notification {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  ticketId  String
  ticket    Ticket   @relation(fields: [ticketId], references: [id])
  isRead    Boolean  @default(false)
}
